= Intro =

Due to my inexperience with commercial content management systems and
commercial software analysis in general, I decided that I would confine
my research to open source CMS's. I tried checking out a couple commercial
CMS's, such as http://www.fatwire.com/, but found it very difficult to get
any technical information about it.

In open source CMS's, popularity is critical. The larger the user-base,
the larger the developer-base, the easier it is for the developer to get
support. So popularity is a real criteria in deciding between open
source CMS's.

Unfortunately, Java-based CMS's historically have been much less popular than alternatives (typically PHP, deployable on LAMP-like configurations)

Several articles, though dating back to 2005, confirm this viewpoint.
 1. http://www.indicthreads.com/blogs/161/Java_PHP_CMS_Comparison.html
 2. http://www.theserverside.com/news/thread.tss?thread_id=33163

= Java-based CMS Roundup =

== Alfresco ==

 * Dev site: http://dev.alfresco.com/
 * Demo site: http://hosted4.alfresco.com/alfresco/faces/jsp/login.jsp (Username: boris@z3.ca, Password: FTtc0mPB)

There are forums which seem fairly active: http://forums.alfresco.com/, as well as a wiki, which doubles as documentation for the project. It doesn't look too mature though. A quick glance makes me suspect that it won't be easy to implement full branding or add complex custom features.

== Magnolia ==

 * Dev site: http://documentation.magnolia.info/docs/en/developer.html
 * Demo site: http://www.magnolia.info/en/about-magnolia/demo.html

Magnolia provides documented websphere integration, which I wasn't able to find for other CMS's: http://documentation.magnolia.info/docs/en/administrator/deployment/websphere.html

Unfortunately, developer docs are still being rewritten, so all one has to go by (reliably) is the API. But from the old documentation, it looks like JSP is the preferred method of doing dynamic pages. The idea is that Magnolia supports a special kind of user called a "Templater", whose role is to create templates (ie. write JSP snippets) which can be referenced by the administrator of the CMS and attached to various pages.

Overall, this looks like a really promising solution, and should be investigated deeper.

== OpenCMS ==

 * Dev site: http://www.opencms.org/opencms/en/development/core.html

OpenCMS provides a really ugly website with documentation that is frustrating to deal with. I found no documentation about how to write modules or any obvious avenues of getting support. They have no live demo.

Let me quote [an article http://www.cmswire.com/cms/cms-reviews/cms-review-opencms-60-000814.php] from last year: "Probably the number one problem we faced was the lack of good documentation. Our developers faced a steep initial learning curve when extending the system with new functionality. At the time of our implementation, the only book available on the market was written for version 5.0, which is quite different from current 6.0."

I wouldn't waste more time on this one.
                       
== Others ==

Apache Lenya is extremely primitive. I don't think it's a serious contender.
